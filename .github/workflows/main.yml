name: m2-actions-test
on: [push]

jobs:
  magento2-build:
    runs-on: ubuntu-latest
    name: 'm2 tests & build'
    services:
      mysql:
        image: docker://mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: magento
          MYSQL_DATABASE: magento
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      elasticsearch:
        image: docker://elasticsearch:7.17.0
        ports:
          - 9200:9200
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
      #opensearch:
      #  image: ghcr.io/mad-i-t/magento-opensearch:2.5.0
      #  ports:
      #    - 9200:9200
      #  options: -e="discovery.type=single-node" -e "plugins.security.disabled=true" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - uses: actions/checkout@v3
      - name: 'install fresh pwa-studio project'
        uses: MAD-I-T/magento-actions@v3.20
        with:
          process: 'pwa-studio-install'
          #no_push: 1
          
          
      - name: 'launch magento2 build'
        if: always()
        #if: ${{false}}
        id: build
        uses: MAD-I-T/magento-actions@v3.20
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
        with:
          process: 'build'

      
      #### section to be activated, for zero downtime deployment on preprod and/or prod remove ${{false}}
      - name: 'launch magento2 zero downtime deploy with no permission check'
        if: ${{false}} #  
        #if: steps.build.outcome == 'success'
        uses: MAD-I-T/magento-actions@master
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
          BUCKET_COMMIT: bucket-commit-${{github.sha}}.tar.gz
          MYSQL_ROOT_PASSWORD: magento
          MYSQL_DATABASE: magento
          HOST_DEPLOY_PATH: ${{secrets.STAGE_HOST_DEPLOY_PATH}}
          HOST_DEPLOY_PATH_BUCKET: ${{secrets.STAGE_HOST_DEPLOY_PATH}}/bucket
          SSH_PRIVATE_KEY: ${{secrets.STAGE_SSH_PRIVATE_KEY}}
          SSH_CONFIG: ${{secrets.STAGE_SSH_CONFIG}}
          WRITE_USE_SUDO: false
        with:
          deployer: 'no-permission-check'
          process: 'deploy-staging'

        
      - name: 'unlock deployer if fails'
        if: ${{false}} 
        #if: failure() || cancelled()
        uses: MAD-I-T/magento-actions@master
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
          BUCKET_COMMIT: bucket-commit-${{github.sha}}.tar.gz
          MYSQL_ROOT_PASSWORD: magento
          MYSQL_DATABASE: magento
          HOST_DEPLOY_PATH: ${{secrets.STAGE_HOST_DEPLOY_PATH}}
          HOST_DEPLOY_PATH_BUCKET: ${{secrets.STAGE_HOST_DEPLOY_PATH}}/bucket
          SSH_PRIVATE_KEY: ${{secrets.STAGE_SSH_PRIVATE_KEY}}
          SSH_CONFIG: ${{secrets.STAGE_SSH_CONFIG}}
          WRITE_USE_SUDO: false
        with:
          process: 'cleanup-staging'
  

          

      #- name: 'install fresh magento repo'
      #  if: ${{false}}
      #  uses: MAD-I-T/magento-actions@master
      #  env:
      #    COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
      #  with:
      #    process: 'create-project'
      #    magento_version: 2.4.4
          #no_push: 1

